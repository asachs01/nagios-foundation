package cmd

import (
	"fmt"
	"os"

	"github.com/ncr-devops-platform/nagiosfoundation/cmd/initcmd"
	"github.com/ncr-devops-platform/nagiosfoundation/lib/app/nagiosfoundation"
	"github.com/spf13/cobra"
)

// Execute runs the root command
func Execute() {
	var warning, critical int
	var metricName string

	var rootCmd = &cobra.Command{
		Use:   "check_uptime",
		Short: "Determine if system uptime used exceeds time threshold.",
		Long: `Determines the system uptime in seconds and if over the --critical
threshold issue a CRITICAL response, then check if over the --warning threshold,
issue a WARNING response. Otherwise, an OK response is issued.`,
		Run: func(cmd *cobra.Command, args []string) {
			cmd.ParseFlags(os.Args)
			msg, retval := nagiosfoundation.CheckUptime("", warning, critical, metricName)

			fmt.Println(msg)
			os.Exit(retval)
		},
	}

	initcmd.AddVersionCommand(rootCmd)

	rootCmd.Flags().IntVarP(&warning, "warning", "w", 259200, "The uptime threshold to issue a warning alert, default is 72 hours (259200)")
	rootCmd.Flags().IntVarP(&critical, "critical", "c", 604800, "The uptime threshold to issue a critical alert, default is 1 week (604800)")
	rootCmd.Flags().StringVarP(&metricName, "metric_name", "m", "current_sytem_uptime", "the name of the metric generated by this check")

	if err := rootCmd.Execute(); err != nil {
		fmt.Println(err)
		os.Exit(1)
	}
}
